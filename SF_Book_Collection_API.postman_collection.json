{
  "info": {
    "name": "SF Book Collection API",
    "description": "API collection for testing the SF Book Collection application",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
  },
  "item": [
    {
      "name": "Authentication",
      "item": [
        {
          "name": "Register New User",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"username\": \"testuser\",\n    \"email\": \"test@example.com\",\n    \"password\": \"password123\",\n    \"roles\": [\"user\"]\n}"
            },
            "url": {
              "raw": "http://localhost:8080/api/v1/auth/signup",
              "protocol": "http",
              "host": ["localhost"],
              "port": "8080",
              "path": ["api", "v1", "auth", "signup"]
            },
            "description": "Register a new user"
          },
          "response": []
        },
        {
          "name": "Login (Admin)",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"username\": \"admin\",\n    \"password\": \"admin123\"\n}"
            },
            "url": {
              "raw": "http://localhost:8080/api/v1/auth/login",
              "protocol": "http",
              "host": ["localhost"],
              "port": "8080",
              "path": ["api", "v1", "auth", "login"]
            },
            "description": "Login with admin credentials"
          },
          "response": []
        },
        {
          "name": "Login (User)",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"username\": \"testuser\",\n    \"password\": \"password123\"\n}"
            },
            "url": {
              "raw": "http://localhost:8080/api/v1/auth/login",
              "protocol": "http",
              "host": ["localhost"],
              "port": "8080",
              "path": ["api", "v1", "auth", "login"]
            },
            "description": "Login with user credentials"
          },
          "response": []
        }
      ],
      "description": "Endpoints for user authentication and registration"
    },
    {
      "name": "Books",
      "item": [
        {
          "name": "Get All Books",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "http://localhost:8080/api/v1/books",
              "protocol": "http",
              "host": ["localhost"],
              "port": "8080",
              "path": ["api", "v1", "books"]
            },
            "description": "Retrieve all books (public access)"
          },
          "response": []
        },
        {
          "name": "Get Book by ID",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "http://localhost:8080/api/v1/books/1",
              "protocol": "http",
              "host": ["localhost"],
              "port": "8080",
              "path": ["api", "v1", "books", "1"]
            },
            "description": "Retrieve a specific book by ID (public access)"
          },
          "response": []
        },
        {
          "name": "Search Books",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "http://localhost:8080/api/v1/books/search?title=Foundation&author=Asimov&subGenre=SPACE_OPERA",
              "protocol": "http",
              "host": ["localhost"],
              "port": "8080",
              "path": ["api", "v1", "books", "search"],
              "query": [
                {
                  "key": "title",
                  "value": "Foundation"
                },
                {
                  "key": "author",
                  "value": "Asimov"
                },
                {
                  "key": "subGenre",
                  "value": "SPACE_OPERA"
                }
              ]
            },
            "description": "Search books with filters (public access)"
          },
          "response": []
        },
        {
          "name": "Create Book",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{jwt_token}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"title\": \"Foundation\",\n    \"synopsis\": \"First book in the Foundation series\",\n    \"publicationYear\": 1951,\n    \"coverImageUrl\": \"https://example.com/foundation.jpg\",\n    \"isbn\": \"9780553293357\",\n    \"pageCount\": 320,\n    \"subGenre\": \"SPACE_OPERA\",\n    \"authorId\": 1\n}"
            },
            "url": {
              "raw": "http://localhost:8080/api/v1/books",
              "protocol": "http",
              "host": ["localhost"],
              "port": "8080",
              "path": ["api", "v1", "books"]
            },
            "description": "Create a new book (requires authentication)"
          },
          "response": []
        },
        {
          "name": "Update Book",
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{jwt_token}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"title\": \"Foundation (Updated)\",\n    \"synopsis\": \"First book in the Foundation series - revised edition\",\n    \"publicationYear\": 1951,\n    \"coverImageUrl\": \"https://example.com/foundation.jpg\",\n    \"isbn\": \"9780553293357\",\n    \"pageCount\": 320,\n    \"subGenre\": \"SPACE_OPERA\",\n    \"authorId\": 1\n}"
            },
            "url": {
              "raw": "http://localhost:8080/api/v1/books/1",
              "protocol": "http",
              "host": ["localhost"],
              "port": "8080",
              "path": ["api", "v1", "books", "1"]
            },
            "description": "Update an existing book (requires authentication)"
          },
          "response": []
        },
        {
          "name": "Patch Book",
          "request": {
            "method": "PATCH",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{jwt_token}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"synopsis\": \"First book in the Foundation series - latest edition\"\n}"
            },
            "url": {
              "raw": "http://localhost:8080/api/v1/books/1",
              "protocol": "http",
              "host": ["localhost"],
              "port": "8080",
              "path": ["api", "v1", "books", "1"]
            },
            "description": "Partially update a book (requires authentication)"
          },
          "response": []
        },
        {
          "name": "Delete Book",
          "request": {
            "method": "DELETE",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{jwt_token}}"
              }
            ],
            "url": {
              "raw": "http://localhost:8080/api/v1/books/1",
              "protocol": "http",
              "host": ["localhost"],
              "port": "8080",
              "path": ["api", "v1", "books", "1"]
            },
            "description": "Delete a book (requires authentication)"
          },
          "response": []
        }
      ],
      "description": "Endpoints for managing books"
    },
    {
      "name": "Authors",
      "item": [
        {
          "name": "Get All Authors",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "http://localhost:8080/api/v1/authors",
              "protocol": "http",
              "host": ["localhost"],
              "port": "8080",
              "path": ["api", "v1", "authors"]
            },
            "description": "Retrieve all authors (public access)"
          },
          "response": []
        },
        {
          "name": "Get Author by ID",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "http://localhost:8080/api/v1/authors/1",
              "protocol": "http",
              "host": ["localhost"],
              "port": "8080",
              "path": ["api", "v1", "authors", "1"]
            },
            "description": "Retrieve a specific author by ID (public access)"
          },
          "response": []
        },
        {
          "name": "Create Author",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{jwt_token}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"name\": \"Isaac Asimov\",\n    \"biography\": \"American writer and professor of biochemistry at Boston University\",\n    \"birthDate\": \"1920-01-02\",\n    \"deathDate\": \"1992-04-06\",\n    \"photoUrl\": \"https://example.com/asimov.jpg\"\n}"
            },
            "url": {
              "raw": "http://localhost:8080/api/v1/authors",
              "protocol": "http",
              "host": ["localhost"],
              "port": "8080",
              "path": ["api", "v1", "authors"]
            },
            "description": "Create a new author (requires authentication)"
          },
          "response": []
        },
        {
          "name": "Update Author",
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{jwt_token}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"name\": \"Isaac Asimov\",\n    \"biography\": \"Updated biography for Isaac Asimov\",\n    \"birthDate\": \"1920-01-02\",\n    \"deathDate\": \"1992-04-06\",\n    \"photoUrl\": \"https://example.com/asimov.jpg\"\n}"
            },
            "url": {
              "raw": "http://localhost:8080/api/v1/authors/1",
              "protocol": "http",
              "host": ["localhost"],
              "port": "8080",
              "path": ["api", "v1", "authors", "1"]
            },
            "description": "Update an existing author (requires authentication)"
          },
          "response": []
        },
        {
          "name": "Delete Author",
          "request": {
            "method": "DELETE",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{jwt_token}}"
              }
            ],
            "url": {
              "raw": "http://localhost:8080/api/v1/authors/1",
              "protocol": "http",
              "host": ["localhost"],
              "port": "8080",
              "path": ["api", "v1", "authors", "1"]
            },
            "description": "Delete an author (requires authentication)"
          },
          "response": []
        }
      ],
      "description": "Endpoints for managing authors"
    },
    {
      "name": "Collections",
      "item": [
        {
          "name": "Get All Collections",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "http://localhost:8080/api/v1/collections",
              "protocol": "http",
              "host": ["localhost"],
              "port": "8080",
              "path": ["api", "v1", "collections"]
            },
            "description": "Retrieve all collections (public access)"
          },
          "response": []
        },
        {
          "name": "Get Collection by ID",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "http://localhost:8080/api/v1/collections/1",
              "protocol": "http",
              "host": ["localhost"],
              "port": "8080",
              "path": ["api", "v1", "collections", "1"]
            },
            "description": "Retrieve a specific collection by ID (public access)"
          },
          "response": []
        },
        {
          "name": "Create Collection",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{jwt_token}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"name\": \"Classic SF\",\n    \"description\": \"Classic science fiction books from the Golden Age\",\n    \"isPublic\": true,\n    \"bookIds\": [1, 2]\n}"
            },
            "url": {
              "raw": "http://localhost:8080/api/v1/collections",
              "protocol": "http",
              "host": ["localhost"],
              "port": "8080",
              "path": ["api", "v1", "collections"]
            },
            "description": "Create a new collection (requires authentication)"
          },
          "response": []
        },
        {
          "name": "Update Collection",
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{jwt_token}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"name\": \"Classic SF (Updated)\",\n    \"description\": \"Updated collection of classic science fiction books\",\n    \"isPublic\": true,\n    \"bookIds\": [1, 2, 3]\n}"
            },
            "url": {
              "raw": "http://localhost:8080/api/v1/collections/1",
              "protocol": "http",
              "host": ["localhost"],
              "port": "8080",
              "path": ["api", "v1", "collections", "1"]
            },
            "description": "Update an existing collection (requires authentication)"
          },
          "response": []
        },
        {
          "name": "Delete Collection",
          "request": {
            "method": "DELETE",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{jwt_token}}"
              }
            ],
            "url": {
              "raw": "http://localhost:8080/api/v1/collections/1",
              "protocol": "http",
              "host": ["localhost"],
              "port": "8080",
              "path": ["api", "v1", "collections", "1"]
            },
            "description": "Delete a collection (requires authentication)"
          },
          "response": []
        },
        {
          "name": "Add Book to Collection",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{jwt_token}}"
              }
            ],
            "url": {
              "raw": "http://localhost:8080/api/v1/collections/1/books/3",
              "protocol": "http",
              "host": ["localhost"],
              "port": "8080",
              "path": ["api", "v1", "collections", "1", "books", "3"]
            },
            "description": "Add a book to an existing collection (requires authentication)"
          },
          "response": []
        },
        {
          "name": "Remove Book from Collection",
          "request": {
            "method": "DELETE",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{jwt_token}}"
              }
            ],
            "url": {
              "raw": "http://localhost:8080/api/v1/collections/1/books/3",
              "protocol": "http",
              "host": ["localhost"],
              "port": "8080",
              "path": ["api", "v1", "collections", "1", "books", "3"]
            },
            "description": "Remove a book from a collection (requires authentication)"
          },
          "response": []
        }
      ],
      "description": "Endpoints for managing book collections"
    }
  ],
  "event": [
    {
      "listen": "prerequest",
      "script": {
        "type": "text/javascript",
        "exec": [
          ""
        ]
      }
    },
    {
      "listen": "test",
      "script": {
        "type": "text/javascript",
        "exec": [
          "// Extract and store the JWT token when logging in",
          "if (pm.response.code === 200 && pm.request.url.toString().includes('/api/v1/auth/login')) {",
          "    const jsonResponse = pm.response.json();",
          "    if (jsonResponse && jsonResponse.data && jsonResponse.data.token) {",
          "        pm.environment.set('jwt_token', jsonResponse.data.token);",
          "        console.log('JWT token saved to environment variable: jwt_token');",
          "    }",
          "}"
        ]
      }
    }
  ],
  "variable": [
    {
      "key": "jwt_token",
      "value": "",
      "type": "string"
    }
  ]
}